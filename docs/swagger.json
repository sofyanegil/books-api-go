{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample service for managing books",
        "title": "Book API",
        "contact": {
            "name": "API Support",
            "email": "sofyanegil@gmail.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/books": {
            "get": {
                "description": "Get details of all book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Book"
                        }
                    }
                }
            },
            "post": {
                "description": "Post details of book corresponding to the input bookID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Post details for a given Id",
                "parameters": [
                    {
                        "description": "create book",
                        "name": "entity.Book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Book"
                        }
                    }
                }
            }
        },
        "/books/{bookID}": {
            "get": {
                "description": "Get details of book corresponding to the input bookID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get details for a given Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the book",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Book"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the book corresponding to the input bookID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update book identified by the given Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bookID of the book to be updated",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update book",
                        "name": "entity.Book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Book"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the order corresponding to the input bookID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Delete book identified by the given bookID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bookID of the book to be deleted",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name_book": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}